This project aims to create a CLI tool that dynamically generates and maintains an accurate `.cursorrules` file for improved integration with Cursor, a VSCode fork using GPT-4 for coding assistance. Cursor often misinterprets development environments, leading to errors in complex projects. The tool periodically collects real-time data (e.g., Docker status, active services, file tree, dependencies) via system commands, consolidates it into a snapshot, and uses an LLM to produce a detailed `.cursorrules` file. 

By automating command execution (e.g., `docker ps`, `python --version`, `tree`) and leveraging LLM contextualization, the tool ensures `.cursorrules` stays up-to-date. This reduces errors and enhances Cursor's accuracy in code suggestions and debugging, improving developer productivity in complex environments.